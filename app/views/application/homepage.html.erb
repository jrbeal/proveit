<html xmlns="http://www.w3.org/1999/html">
	<head>
		<script type="text/javascript">

			var verbosity = <%= current_prover.verbosity %>;

			$(function() {
				$('#lessmaster').on("click", function () {
					if (verbosity > 1) {
						verbosity -= 1;
					}

					switch (verbosity) {
						case 3:
							$('.vlevelindicator3').show();
							$('.vlevelindicator4').hide();
							$('.vlevel4').fadeOut();
							break;
						case 2:
							$('.vlevelindicator2').show();
							$('.vlevelindicator3').hide();
							$('.postimage').fadeOut();
							$('.vlevel3').fadeOut();
							break;
						case 1:
						default:
							$('.vlevelindicator1').show();
							$('.vlevelindicator2').hide();
							$('.vlevel2').fadeOut();
							break;
					}

					console.log("verbosity level is now " + verbosity)
				});

				$('#moremaster').on("click", function () {

					if (verbosity < 4) {
						verbosity += 1;
					}

					switch (verbosity) {
						case 4:
							$('.vlevelindicator3').hide();
							$('.vlevelindicator4').show();
							$('.vlevel4').fadeIn();
							break;
						case 3:
							$('.vlevelindicator2').hide();
							$('.vlevelindicator3').show();
							$('.postimage').fadeIn();
							$('.vlevel3').fadeIn();
							break;
						case 2:
						default:
							$('.vlevelindicator1').hide();
							$('.vlevelindicator2').show();
							$('.vlevel2').fadeIn();
							break;
					}

					console.log("verbosity level is now " + verbosity)
				});

				$('#lesspost').on("click", function () {
					console.log("Decreasing post verbosity.");
				});

				$('#morepost').on("click", function () {
					console.log("Increasing post verbosity.");
				});

				$(function () {
					switch (verbosity) {
						case 4:
							console.log("Showing verbosity level 4.");
							$('.vlevelindicator1').hide();
							$('.vlevelindicator2').hide();
							$('.vlevelindicator3').hide();
							$('.vlevelindicator4').show();
							$('.vlevel1').show();
							$('.vlevel2').show();
							$('.vlevel3').show();
							$('.vlevel4').show();
							$('.postimage').show();
							break;
						case 3:
							console.log("Showing verbosity level 3.");
							$('.vlevelindicator1').hide();
							$('.vlevelindicator2').hide();
							$('.vlevelindicator3').show();
							$('.vlevelindicator4').hide();
							$('.vlevel1').show();
							$('.vlevel2').show();
							$('.vlevel3').show();
							$('.vlevel4').hide();
							$('.postimage').show();
							break;
						case 2:
							console.log("Showing verbosity level 2.");
							$('.vlevelindicator1').hide();
							$('.vlevelindicator2').show();
							$('.vlevelindicator3').hide();
							$('.vlevelindicator4').hide();
							$('.vlevel1').show();
							$('.vlevel2').show();
							$('.vlevel3').hide();
							$('.vlevel4').hide();
							$('.postimage').hide();
							break;
						case 1:
						default:
							console.log("Showing verbosity level 1.");
							$('.vlevelindicator1').show();
							$('.vlevelindicator2').hide();
							$('.vlevelindicator3').hide();
							$('.vlevelindicator4').hide();
							$('.vlevel1').show();
							$('.vlevel2').hide();
							$('.vlevel3').hide();
							$('.vlevel4').hide();
							$('.postimage').hide();
					}
				});

				$('.follow').on("click", function (e) {
					var $tgt = $(e.target);
					$.post('/follows', {owner: <%= current_prover.id %>, follows: $tgt.attr("data-prover-id") }, function(resp) {
						var follow = JSON.parse(resp);
						console.log(follow);
					});

					console.log("Following this prover.");
					window.location.reload();
					return false;
				});

				$('.unfollow').on("click", function (e) {
					var $tgt = $(e.target);
					$.ajax({
						url: '/follows?' + $.param({"owner": <%= current_prover.id %>, "follows": $tgt.attr("data-prover-id")}),
						type: 'DELETE',
						success: function(resp) {
							console.log("Unfollowing this prover.");
							window.location.reload();
						}
					})

					return false;
				});

				$('.bookmark').on("click", function (e) {
					var $tgt = $(e.target);
					$.post('/bookmarks', {owner: <%= current_prover.id %>, post: $tgt.attr("data-post") }, function(resp) {
						var follow = JSON.parse(resp);
						console.log(follow);
					});

					console.log("Bookmarking this post.");
					window.location.reload();
					return false;
				});

				$('.unbookmark1').on("click", function (e) {
					var $tgt = $(e.target);
					console.log ("Deleting bookmark " + $tgt.attr("data-post"))
					$.ajax({
						url: '/bookmarks?' + $.param({"owner": <%= current_prover.id %>, "post": $tgt.attr("data-post")}),
						type: 'DELETE',
						success: function(resp) {
							console.log("Removing thi bookmark.");
							window.location.reload();
						}
					})

					return false;
				});


				$('#filteroptions').on("change", function(e) {
					var filterId = $('#filteroptions').val();
					console.log("Selecting filter.");
					var $tgt = $(e.target);
					$.ajax({
						url: '/changefilter?' + $.param({"filter_id": filterId}),
						type: 'POST',
						success: function(resp) {
							console.log("Selecting this filter.");
							window.location.reload();
						}
					})

					return false;
				});

			});

		</script>
	</head>

	<body>
		<div class="sidepadding spacing">
			<%= link_to 'Create', posts_new_path %>
			<div style="display:inline; margin-left: 40%">
				<%= select_tag 'filteroptions', options_from_collection_for_select(@defaultfilters, "filter_id", "filter_name", current_prover.cur_filter.id) + content_tag(:option, @divider, :disabled => true, :value => "-1") + options_from_collection_for_select(@customfilters, "filter_id", "filter_name", current_prover.cur_filter.id), :class => 'filterlist' %>
			</div>
			<div class="right" style="margin-right: 5px;">
				<%= link_to "Less", "#", :id => "lessmaster"%>
				<span class="vlevelindicator1"><1></span>
				<span class="vlevelindicator2"><2></span>
				<span class="vlevelindicator3"><3></span>
				<span class="vlevelindicator4"><4></span>
				<%= link_to "More", "#", :id => "moremaster"%>
			</div>
		</div>

		<div class="toppadding10">
			<% @posts.each do |post| %>
				<%= render partial: "application/post", object: post, locals: {indent: 0, kind: ""} %>
			<% end %>
		</div>
	</body>
</html>
